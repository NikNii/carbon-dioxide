{"version":3,"sources":["components/Loading.js","components/ResultCard.js","components/Results.js","components/SearchBar.js","index.js"],"names":["Loading","props","react_default","a","createElement","className","message","defaultProps","ResultCard","location","year","emissions","population","Results","results","emDone","popDone","resultCards","indxChange","k","i","push","components_ResultCard","pop","country","value","date","emission","index","console","log","lastupdated","SearchBar","state","term","onFormSubmit","event","preventDefault","_this","onSubmit","_this2","this","type","placeholder","onChange","e","setState","target","name","React","Component","App","emData","id","countries","activeSearch","localCity","searchIndex","today","Date","getDay","time","toLocaleTimeString","lat","lng","errorMessage","onSearchSubmit","_callee","response","regenerator_default","wrap","_context","prev","next","findIndex","sent","stop","getCoords","getEm","window","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","error","then","axios","get","params","lon","units","appid","data","city","format","per_page","length","concat","getLocation","response2","getPop","_this3","BrowserRouter","Link","to","Route","exact","path","component","components_SearchBar","components_Loading","components_Results","renderContent","ReactDOM","render","src_App","document","querySelector"],"mappings":"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","file":"static/js/main.e81351a6.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../stylesheet.css'\r\n\r\n\r\nconst Loading = (props) => {\r\n    return (\r\n        <div className=\"ui active dimmer\">\r\n            <div className=\"ui big text loader\">{props.message}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nLoading.defaultProps = {\r\n    message: 'Loading..'\r\n}\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport '../stylesheet.css'\r\n\r\nconst ResultCard = (props) => {\r\n    // const {iconName} = themeConfig[overallWeather] \r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <h3>{props.location} in {props.year}</h3>\r\n            <ul className=\"mainData\">\r\n                <li className=\"emission\">Emissions:  <p>{props.emissions}</p></li>\r\n                <li className=\"population\">Population:  <p> {props.population}</p> </li>\r\n                <li className=\"relativeData\">Emissions per person: <p> {props.emissions/props.population}</p> </li> \r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nResultCard.defaultProps = {\r\n    location: 'Finland',\r\n    year: 2014,\r\n    emissions: 47300.633,\r\n    population: 5461512,\r\n}\r\n\r\nexport default ResultCard;","import React from 'react';\r\nimport '../stylesheet.css'\r\n\r\nimport ResultCard from './ResultCard';\r\n\r\n\r\nconst Results = (props) => {\r\n    if (!props.results.emDone & !props.results.popDone) {\r\n        return null;\r\n    }\r\n    // const resultCards = props.results.pop[1].map((result) => {\r\n    //     return (\r\n    //         // <li></li>\r\n    //         <li>\r\n    //             <ResultCard \r\n    //                 location={props.results.pop[1][{result}].country.value}\r\n    //                 year={props.results.pop[1][{result}].date}\r\n    //                 // emissions={props.results.emission[1][0].value}\r\n    //                 // population={props.results.pop[1][{result}].value}\r\n    //             />\r\n    //         </li>\r\n    //     )\r\n                \r\n    // })\r\n    let resultCards = [];\r\n    if (props.results.indxChange===59){\r\n        let k = 4\r\n        for (let i = 0; i < 47; i++) {\r\n            resultCards.push(\r\n                <li>\r\n                    <h2>{i+1}</h2>\r\n                    <ResultCard \r\n                            location={props.results.pop[1][k].country.value}\r\n                            year={props.results.pop[1][k].date}\r\n                            emissions={props.results.emission[1][k].value}\r\n                            population={props.results.pop[1][k].value}\r\n                    />\r\n                </li>\r\n            )\r\n            k += 59;\r\n          }\r\n    }\r\n    let k = props.results.index;\r\n    console.log(props.results.pop[1][k].country.value);\r\n    for (let i = 0; i < 59; i++) {\r\n        resultCards.push(\r\n            <li>\r\n                <ResultCard \r\n                        location={props.results.pop[1][k].country.value}\r\n                        year={props.results.pop[1][k].date}\r\n                        emissions={props.results.emission[1][k].value}\r\n                        population={props.results.pop[1][k].value}\r\n                />\r\n            </li>\r\n        )\r\n        k++;\r\n      }\r\n    return (\r\n        <div>\r\n            <h2>Results</h2>\r\n            <p className=\"updateInfo\">Last updated: {props.results.emission[0].lastupdated}</p>\r\n            <ul>\r\n                {/* <li>\r\n                    <ResultCard \r\n                            location={props.results.pop[1][0].country.value}\r\n                            year={props.results.pop[1][0].date}\r\n                            emissions={props.results.emission[1][0].value}\r\n                            population={props.results.pop[1][0].value}\r\n                    />\r\n                </li> */}\r\n                {resultCards}\r\n            </ul>\r\n        </div>\r\n        \r\n    )\r\n    \r\n};\r\n\r\nResults.defaultProps = {\r\n    results: [],\r\n    index: 0,\r\n    indxChange: 1,\r\n}\r\n\r\nexport default Results;","import React from 'react';\r\nimport '../stylesheet.css';\r\n\r\nimport Results from './Results';\r\n\r\nclass SearchBar extends React.Component {\r\n    state = {\r\n        term: ''\r\n    };\r\n\r\n    onFormSubmit = event => {\r\n        event.preventDefault();\r\n        console.log(this.state.term);\r\n        this.props.onSubmit(this.state.term);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <form onSubmit={this.onFormSubmit} className=\"locationForm\">\r\n                <label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"searchBar\" \r\n                        placeholder=\"Example: Finland, Sweden\" \r\n                        value={this.state.term} \r\n                        onChange={(e) => {this.setState({ term: e.target.value })}}/>\r\n                </label>\r\n                <input type=\"submit\" className=\"searchButton\" value=\"Search\" />\r\n                <label>\r\n                    <input type=\"checkbox\" className=\"capitalSearch\" name=\"capital\" value=\"true\" />\r\n                    <p className=\"checkText\">Show per capita</p>\r\n                </label>\r\n            </form>\r\n        )\r\n    };\r\n}\r\n\r\nexport default SearchBar;","// Import the React and ReactDOM libraries\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport Loading from './components/Loading';\r\nimport Results from './components/Results';\r\nimport SearchBar from './components/SearchBar';\r\n\r\nclass App extends React.Component{\r\n    state = {\r\n        emData: [],\r\n        population: [\r\n            {lastupdated: '2019-02-28'},\r\n            [{\r\n                country: {id:'1A', value: 'Placeholder Country'},\r\n                date: '9999',\r\n                value: '9001'\r\n            }]\r\n            \r\n        ],\r\n        popDone: false,\r\n        emDone: false,\r\n        countries: [],\r\n        activeSearch: false,\r\n        localCity: '',\r\n        searchIndex: 0,\r\n        today: new Date().getDay(),\r\n        time: new Date().toLocaleTimeString(),\r\n        lat: null, lng: null,\r\n        errorMessage: ''\r\n};\r\n    \r\n    componentDidMount(){\r\n           this.getCoords();\r\n           this.getEm();\r\n           \r\n\r\n    }\r\n    async getCoords(){\r\n        await window.navigator.geolocation.getCurrentPosition(\r\n            position => this.setState({ lat: position.coords.latitude, \r\n                                        lng: position.coords.longitude}),\r\n            error =>    this.setState({ errorMessage:error.message }).then(()=> {\r\n            })\r\n        );\r\n        console.log('Coordinates examined!')\r\n    }\r\n    async getLocation(lat, lng){\r\n        // if(this.state.weatcherCheck){\r\n            const response = await axios.get('http://api.openweathermap.org/data/2.5/forecast', {\r\n                        params: {   lat: lat,\r\n                                    lon: lng,\r\n                                    units: 'metric',\r\n                                    appid: 'bd792b4f514e82a2468853df8a863379'}\r\n                        });\r\n            this.setState({ localCity: response.data.city,});\r\n            console.log('Location found: ', this.state.localCity)\r\n        // }\r\n    }\r\n    async getPop(){\r\n        const response = await axios.get('http://api.worldbank.org/v2/country/all/indicator/SP.POP.TOTL', {\r\n            params: {\r\n                format: 'json',\r\n                per_page: 30000, // max amount = 15576, as of 27.02.2019. 15k = 40 years of data.\r\n            }\r\n\r\n        });\r\n        console.log('Population fetched!');\r\n        this.setState({ population: response.data,\r\n                        popDone: true });\r\n        let  resultCards = [];\r\n        for (let i=0; i < this.state.emData[1].length; i++) {\r\n            resultCards = resultCards.concat(this.state.emData[1][i].country.value);\r\n        }\r\n        this.setState({ countries: resultCards });\r\n        this.getLocation(this.state.lat, this.state.lng);\r\n    }\r\n    async getEm(){\r\n        \r\n        const response2 = await axios.get('http://api.worldbank.org/v2/country/all/indicator/EN.ATM.CO2E.KT', {\r\n            params: {\r\n                format: 'json',\r\n                per_page: 30000, // max amount = 15576, as of 27.02.2019. 15k = 40 years of data.\r\n            }\r\n\r\n        });\r\n        console.log('Emissions fetched!');\r\n        // console.log('render results: ' this.state.);\r\n        this.setState({ emData: response2.data,\r\n                        emDone: true });\r\n\r\n        this.getPop();\r\n    }\r\n    onSearchSubmit = async (term) => {\r\n        const response = await this.state.countries.findIndex((value) => {\r\n            return term === value;\r\n        });\r\n        console.log('onSearchSubmit found this!: ', response);\r\n        if(response > 0){\r\n            this.setState({ \r\n            activeSearch: true,\r\n            searchIndex: response });\r\n        }\r\n    }\r\n\r\n    renderContent(){\r\n        const Search = () => (\r\n        <div className=\"content\">\r\n            <SearchBar onSubmit={this.onSearchSubmit} />\r\n            <div className=\"resultArea\">\r\n            {!(this.state.emDone & this.state.popDone)&&\r\n                <Loading message={'Fetching data, please wait'}/>\r\n            }\r\n            {this.state.activeSearch &&\r\n                <div>\r\n                    <Results results={{ \r\n                        index: this.state.searchIndex,\r\n                        pop: this.state.population,\r\n                        emission: this.state.emData,\r\n                        popDone: this.state.popDone,\r\n                        emDone: this.state.emDone\r\n                        }}/>\r\n                </div>\r\n            }\r\n            </div>\r\n        </div>\r\n        )\r\n\r\n        const Local = () => (\r\n            <div className=\"content\">\r\n                {!(this.state.emDone & this.state.popDone)&&\r\n                    <Loading message={'Fetching data, please wait'}/>\r\n                }\r\n                <div className=\"localExcuse\">\r\n                    <p>You're in <h2>{this.state.localCity.name}, {this.state.localCity.country}</h2> </p>\r\n                    <p>Due to the lack of time on my behalf, I didn't have time to figure out how to change OpenWeatherApi's country code to match World Bank's code. Or alternatively use some other method altogether.</p>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n\r\n        const Compare = () => (\r\n            <div className=\"content\">\r\n                {!(this.state.emDone & this.state.popDone)&&\r\n                    <Loading message={'Fetching data, please wait'}/>\r\n                }\r\n                {(this.state.emDone&this.state.popDone)&&\r\n                <div>\r\n                    <p className=\"compareText\">The comparison data is from 2014 on purpose. The last 5 years don't have all of the data so I wanted to put the latest entries that have all of the data.</p>\r\n                    <div className= \"compareResults\">\r\n                        <div className=\"firstResults\">\r\n                        <Results results={{ \r\n                            index: this.state.searchIndex,\r\n                            pop: this.state.population,\r\n                            emission: this.state.emData,\r\n                            popDone: this.state.popDone,\r\n                            emDone: this.state.emDone,\r\n                            indxChange: 59,\r\n                            }}/>\r\n                        </div>\r\n                        <div className=\"secondResults\">\r\n                        <Results results={{ \r\n                            index: this.state.searchIndex,\r\n                            pop: this.state.population,\r\n                            emission: this.state.emData,\r\n                            popDone: this.state.popDone,\r\n                            emDone: this.state.emDone,\r\n                            indxChange: 59,\r\n                        }}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n        // Checks whether there's an error\r\n        if(this.state.errorMessage && !this.state.lat && !this.state.lng){\r\n            return <div>\r\n                <Loading message={this.state.errorMessage}/>\r\n            </div>\r\n        }\r\n        // Checks if the location has been received\r\n        if(!this.state.errorMessage && this.state.lat && this.state.lng){\r\n            // this.getWeather(this.state.lat, this.state.lng);\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"toolbar\">\r\n                        <div className=\"co\">\r\n                            <p>CO<sub>2</sub> Emissions</p>\r\n                            \r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <Router>\r\n                        <div>\r\n                            <div className=\"navBar\">\r\n                                <ul className=\"navButtons\">\r\n                                    <li>\r\n                                        <Link to=\"/\">Search</Link>\r\n                                    </li>\r\n                                    <li>\r\n                                        <Link to=\"/local\">Local CO<sub>2</sub></Link>\r\n                                    </li>\r\n                                    <li>\r\n                                        <Link to=\"/compare\">Compare</Link>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>   \r\n\r\n                            <Route exact path=\"/\" component={Search} />\r\n                            <Route exact path=\"/local\" component={Local} />\r\n                            <Route exact path=\"/compare\" component={Compare} />\r\n\r\n\r\n                        </div>\r\n                    </Router>\r\n\r\n                </div>\r\n            )\r\n            \r\n        }\r\n        // If neither of the above work:\r\n        // It renders a \"loading\" window until the user accepts the location request\r\n        return <div><Loading message=\"Please accept the location request..\"/></div>\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <div className=\"app\">\r\n                {this.renderContent()}\r\n            </div>\r\n        )\r\n    }\r\n        \r\n    \r\n};\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}